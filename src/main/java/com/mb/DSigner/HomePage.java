/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mb.DSigner;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import org.apache.pdfbox.examples.signature.CreateVisibleSignature2;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.rendering.PDFRenderer;

/**
 *
 * @author Soham Malakar
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    public HomePage() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(0xB2D8FF));
        buttonEnable(drawSign,false);
    }
    
    public HomePage(String s) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(0xB2D8FF));
        buttonEnable(drawSign,false);
        displayPath(true,s,null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChoose = new javax.swing.JFileChooser();
        frame = new javax.swing.JFrame(){
            public void paint(Graphics g){
                super.paint(g);
                Graphics2D g2 = (Graphics2D)g;
                g2.draw(rec);
            }
        };
        jLabel = new javax.swing.JLabel();
        selFile = new javax.swing.JButton();
        addSign = new javax.swing.JButton();
        sign = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        drawSign = new javax.swing.JButton();
        dsigner = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        outputLoc = new javax.swing.JTextField();
        location = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        page = new javax.swing.JTextField();
        reason = new javax.swing.JTextField();
        pageLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        reasonLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();

        frame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frame.setType(java.awt.Window.Type.UTILITY);

        jLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout frameLayout = new javax.swing.GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(frameLayout);
        frameLayout.setHorizontalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );
        frameLayout.setVerticalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        selFile.setBackground(new java.awt.Color(39, 145, 255));
        selFile.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        selFile.setForeground(new java.awt.Color(255, 255, 255));
        selFile.setText("Select file");
        selFile.setBorder(null);
        selFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selFile.setFocusPainted(false);
        selFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selFileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selFileMouseExited(evt);
            }
        });

        addSign.setBackground(new java.awt.Color(39, 145, 255));
        addSign.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        addSign.setForeground(new java.awt.Color(255, 255, 255));
        addSign.setText("Add Signature");
        addSign.setBorder(null);
        addSign.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addSign.setFocusPainted(false);
        addSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addSignMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addSignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addSignMouseExited(evt);
            }
        });

        sign.setBackground(new java.awt.Color(204, 204, 204));
        sign.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        sign.setForeground(new java.awt.Color(255, 255, 255));
        sign.setText("Sign");
        sign.setBorder(null);
        sign.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sign.setEnabled(false);
        sign.setFocusPainted(false);
        sign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signMouseExited(evt);
            }
        });

        exit.setBackground(new java.awt.Color(178, 216, 255));
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("X");
        exit.setBorderPainted(false);
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.setFocusPainted(false);
        exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
        });

        drawSign.setBackground(new java.awt.Color(204, 204, 204));
        drawSign.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        drawSign.setForeground(new java.awt.Color(255, 255, 255));
        drawSign.setText("Draw Sign");
        drawSign.setBorder(null);
        drawSign.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        drawSign.setEnabled(false);
        drawSign.setFocusPainted(false);
        drawSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drawSignMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                drawSignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                drawSignMouseExited(evt);
            }
        });

        dsigner.setFont(new java.awt.Font("Manrope Medium", 0, 50)); // NOI18N
        dsigner.setForeground(new java.awt.Color(255, 255, 255));
        dsigner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dsigner.setText("DSigner");

        pass.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        pass.setBorder(null);

        outputLoc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        outputLoc.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        outputLoc.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        outputLoc.setDisabledTextColor(new java.awt.Color(39, 145, 255));
        outputLoc.setEnabled(false);
        outputLoc.setOpaque(false);

        location.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        location.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        name.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        name.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        page.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        page.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        page.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pageKeyTyped(evt);
            }
        });

        reason.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        reason.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        pageLabel.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        pageLabel.setText("Page No. *");

        passLabel.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        passLabel.setText("Password *");

        reasonLabel.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        reasonLabel.setText("Reason *");

        locationLabel.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        locationLabel.setText("Location *");

        nameLabel.setFont(new java.awt.Font("Manrope Medium", 0, 14)); // NOI18N
        nameLabel.setText("Name *");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dsigner, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(594, 594, 594)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260)
                .addComponent(locationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(reasonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260)
                .addComponent(passLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(reason, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(selFile, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(addSign, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(drawSign, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(sign, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(outputLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(page)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dsigner, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(locationLabel))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reasonLabel)
                    .addComponent(passLabel))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reason, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(pageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(page, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSign, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drawSign, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sign, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(outputLoc)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selFileMouseClicked
        // TODO add your handling code here:
        
        fileChoose.showOpenDialog(this);
        file = fileChoose.getSelectedFile();
        if(flag<2 && file.getAbsolutePath() != null){
            selFile.setBackground(new java.awt.Color(0x00DE77));
            fileFlag=true;
            flag++;
        }
        if(flag==2)
            buttonEnable(sign,true);
        System.out.println(file.getAbsolutePath());
    }//GEN-LAST:event_selFileMouseClicked

    private void addSignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSignMouseClicked
        // TODO add your handling code here:
        
        fileChoose.showOpenDialog(this);
        signFile = fileChoose.getSelectedFile();
        if(flag<2 && signFile.getAbsolutePath() != null){
            addSign.setBackground(new java.awt.Color(0x00DE77));
            signFlag=true;
            flag++;
        }
        if(flag==2)
            buttonEnable(sign,true);
        System.out.println(signFile.getAbsolutePath());
    }//GEN-LAST:event_addSignMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        Point currCoords = evt.getLocationOnScreen();
        this.setLocation(currCoords.x - mouseDownCompCoords.x, currCoords.y - mouseDownCompCoords.y);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        mouseDownCompCoords = evt.getPoint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        mouseDownCompCoords = null;
    }//GEN-LAST:event_formMouseReleased

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        // TODO add your handling code here:
        exit.setBackground(Color.red);
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        // TODO add your handling code here:
        exit.setBackground(new java.awt.Color(0xB2D8FF));
    }//GEN-LAST:event_exitMouseExited

    private void signMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signMouseClicked
        Exception e = null;
        
        if(sign.isEnabled()){
            try {
                check();
                e = key();
                HomePage obj = new HomePage(outFile.getAbsolutePath());
                obj.setVisible(true);
                this.dispose();
            } catch(Exception f){
                displayPath(false,null,f);
            }
        
        if(e!=null)
            displayPath(dispFlag,null,e);
        }
    }//GEN-LAST:event_signMouseClicked

    private void selFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selFileMouseEntered
        // TODO add your handling code here:
        if(!fileFlag)
        selFile.setBackground(new java.awt.Color(0x4DA4FF));
    }//GEN-LAST:event_selFileMouseEntered

    private void selFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selFileMouseExited
        // TODO add your handling code here:
        if(!fileFlag)
        selFile.setBackground(new java.awt.Color(0x2791FF));
    }//GEN-LAST:event_selFileMouseExited

    private void addSignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSignMouseEntered
        // TODO add your handling code here:
        if(!signFlag)
        addSign.setBackground(new java.awt.Color(0x4DA4FF));
    }//GEN-LAST:event_addSignMouseEntered

    private void addSignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSignMouseExited
        // TODO add your handling code here:
        if(!signFlag)
        addSign.setBackground(new java.awt.Color(0x2791FF));
    }//GEN-LAST:event_addSignMouseExited

    private void signMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signMouseEntered
        // TODO add your handling code here:
        if(sign.isEnabled())
        hover(sign,true);
    }//GEN-LAST:event_signMouseEntered

    private void signMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signMouseExited
        // TODO add your handling code here:
        if(sign.isEnabled())
        hover(sign,false);
    }//GEN-LAST:event_signMouseExited

    private void jLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMousePressed
        // TODO add your handling code here:
        point = evt.getPoint();
        point.y += in.top;
        point.x += in.right;
    }//GEN-LAST:event_jLabelMousePressed

    private void jLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMouseReleased
        // TODO add your handling code here:
        
        Point relPoint = evt.getPoint();
        relPoint.y += in.top;
        relPoint.x += in.right;
        int width = relPoint.x - point.x;
        int height = relPoint.y - point.y;

        int x = point.x;
        int y = point.y;
        if (width < 0) {
            x = relPoint.x;
            width *= -1;
        }
        if (height < 0) {
            y = relPoint.y;
            height *= -1;
        }
        
        
        rec = new Rectangle2D.Float(x, y, width, height);
        Graphics g = frame.getGraphics();
        frame.paint(g);
        
        repaint();
        g.dispose();
    }//GEN-LAST:event_jLabelMouseReleased

    private void drawSignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawSignMouseClicked
        try {
            displayPage();
        } catch (IOException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(drawFlag)
            drawSign.setBackground(new java.awt.Color(0x00DE77));
    }//GEN-LAST:event_drawSignMouseClicked

    private void drawSignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawSignMouseEntered
        // TODO add your handling code here:
        if(drawSign.isEnabled() && drawFlag==false)
        hover(drawSign,true);
    }//GEN-LAST:event_drawSignMouseEntered

    private void drawSignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawSignMouseExited
        // TODO add your handling code here:
        if(drawSign.isEnabled() && drawFlag==false)
        hover(drawSign,false);
    }//GEN-LAST:event_drawSignMouseExited

    private void pageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pageKeyTyped
        // TODO add your handling code here:
        buttonEnable(drawSign,true);
    }//GEN-LAST:event_pageKeyTyped

    /**
     * @param args the command line arguments
     */
    
    public void displayPage() throws IOException{
        
            PDDocument pd = null;
            try {
                drawFlag = false;
                pd = PDDocument.load(file);
                PDFRenderer pr = new PDFRenderer(pd);
                BufferedImage bim = pr.renderImageWithDPI(Integer.parseInt(page.getText())-1,300);
                
                int w = bim.getWidth();
                int h = bim.getHeight();
                
                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                double num = Math.min(screenSize.getHeight(),screenSize.getWidth());
                double den = Math.max(w,h);
                scaleFactor = (float)(num/den);
                
                BufferedImage after = new BufferedImage((int)(w*scaleFactor), (int)(h*scaleFactor), BufferedImage.TYPE_INT_ARGB);
                AffineTransform at = new AffineTransform();
                at.scale(scaleFactor, scaleFactor);
                AffineTransformOp scaleOp = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                after = scaleOp.filter(bim, after);
                
                jLabel.setIcon(new ImageIcon(after));
                
                frame.getContentPane().add(jLabel, BorderLayout.CENTER);

                frame.pack();
                
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                
                in = frame.getInsets();

                drawFlag = true;                
                
               
            }
            catch(Exception e){
                displayPath(false,null,(new Exception("File not selected or Page doesn't exist")));
            }finally{
                if(pd!=null)
                pd.close();
            }         
            
    }
    
    public Exception key() throws KeyStoreException, FileNotFoundException{
        
        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());

        // get user password and file input stream
        char[] password = pass.getPassword();

        java.io.FileInputStream fis = null;
        try {
            
            fis = new java.io.FileInputStream(signFile.getAbsolutePath());
            ks.load(fis, password);
            fis.close();
            
            
            String getname = file.getName();
            outFile = new File(file.getParent()+"\\"+getname.substring(0, getname.lastIndexOf('.'))+"_Signed.pdf");
    
            Rectangle2D humanRect = new Rectangle2D.Double(rec.getX()-in.right, rec.getY()-in.top, rec.getWidth(), rec.getHeight());//64x31

            CreateVisibleSignature2 cvs = new CreateVisibleSignature2(ks,password);
            cvs.setExternalSigning(false);
            cvs.name = name.getText();
            cvs.reason = reason.getText();
            cvs.loc = location.getText();
            cvs.page = Integer.parseInt(page.getText())-1;
            cvs.signPDF(file, outFile, humanRect, null, "Signature1");
            
            
            System.out.println("PDF saved to the location !!!");                      
            
        }catch(Exception e){
            System.out.println(e);
            dispFlag = false;
            return e;
        }
        
        return null;
    }
    
    public void displayPath(boolean flg, String s, Exception e){
        outputLoc.setEditable(false);
        outputLoc.setEnabled(true);
        outputLoc.setOpaque(true);
        if(flg){
            outputLoc.setForeground(Color.black);
            outputLoc.setText(s);
        }
        else{
            outputLoc.setText("Failed! "+e.getLocalizedMessage());
            outputLoc.setForeground(Color.red);
        }
    }
    
    public void buttonEnable(JButton but, boolean set){
        if(set){
            but.setBackground(new java.awt.Color(0x2791FF));  
            but.setEnabled(true);
        }
        else{
            but.setBackground(new java.awt.Color(0xCCCCCC));
            but.setEnabled(false);
        }
    }
    
    public void hover(JButton but, boolean set){
        if(set){
            but.setBackground(new java.awt.Color(0x4DA4FF));
        }
        else{
            but.setBackground(new java.awt.Color(0x2791FF));
        }
    }
    
    public void check() throws EmptyFieldException{        
        if(name.getText().equals("") || location.getText().equals("") || 
                reason.getText().equals("") || pass.getPassword().length==0 ||
                page.getText().equals(""))
            throw (new EmptyFieldException());
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }
    
    private Insets in;
    private float scaleFactor;
    private Rectangle2D rec;
    private Point point;
    private boolean dispFlag = true;
    private boolean fileFlag=false;
    private boolean signFlag=false;
    private boolean drawFlag = false;
    public File file;
    private File outFile;
    private File signFile;
    private Point mouseDownCompCoords = null;
    private int flag=0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSign;
    private javax.swing.JButton drawSign;
    private javax.swing.JLabel dsigner;
    private javax.swing.JButton exit;
    private javax.swing.JFileChooser fileChoose;
    private javax.swing.JFrame frame;
    private javax.swing.JLabel jLabel;
    private javax.swing.JTextField location;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTextField name;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField outputLoc;
    private javax.swing.JTextField page;
    private javax.swing.JLabel pageLabel;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel passLabel;
    private javax.swing.JTextField reason;
    private javax.swing.JLabel reasonLabel;
    private javax.swing.JButton selFile;
    private javax.swing.JButton sign;
    // End of variables declaration//GEN-END:variables
}
